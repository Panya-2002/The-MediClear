"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RestrictedCompactFooter = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const react_2 = require("@chakra-ui/react");
const RestrictedFooterStyleProvider_1 = require("./RestrictedFooterStyleProvider");
/** Desktop only compact footer variant */
const RestrictedCompactFooter = ({ appName, footerIconLink, footerLinks, colorMode, brandLogo, appLink, containerProps, }) => {
    const ColorModeWrapper = (0, react_1.useMemo)(() => {
        if (colorMode === 'dark') {
            return react_2.DarkMode;
        }
        return react_1.Fragment;
    }, [colorMode]);
    const styles = (0, react_2.useMultiStyleConfig)('Footer', {
        variant: 'compact',
    });
    return ((0, jsx_runtime_1.jsx)(ColorModeWrapper, { children: (0, jsx_runtime_1.jsx)(RestrictedFooterStyleProvider_1.FooterStylesProvider, { value: styles, children: (0, jsx_runtime_1.jsxs)(exports.RestrictedCompactFooter.Container, Object.assign({}, containerProps, { children: [(0, jsx_runtime_1.jsxs)(react_2.Stack, { direction: "row", sx: styles.brandContainer, children: [(0, jsx_runtime_1.jsx)(react_2.Link, { colorScheme: "neutral", variant: "inline", textDecorationLine: "none", isExternal: true, title: "Link to application homepage", href: appLink, children: brandLogo !== null && brandLogo !== void 0 ? brandLogo : appName }), (0, jsx_runtime_1.jsx)(react_2.Divider, { orientation: "vertical", variant: "medium" }), (0, jsx_runtime_1.jsx)(react_2.Link, { isExternal: true, title: footerIconLink.label, colorScheme: "neutral", href: footerIconLink.href, children: (0, jsx_runtime_1.jsx)(footerIconLink.Icon, { height: "1.5rem" }) })] }), (0, jsx_runtime_1.jsx)(react_2.Wrap, { flex: 1, overflow: "visible", shouldWrapChildren: true, spacingX: "1.5rem", justify: "flex-end", children: footerLinks === null || footerLinks === void 0 ? void 0 : footerLinks.map(({ label, href }, index) => ((0, jsx_runtime_1.jsx)(react_2.Link, { isExternal: true, sx: styles.link, colorScheme: "neutral", variant: "standalone", href: href, children: label }, index))) })] })) }) }));
};
exports.RestrictedCompactFooter = RestrictedCompactFooter;
const RestrictedCompactFooterContainer = (_a) => {
    var { children } = _a, props = __rest(_a, ["children"]);
    const styles = (0, RestrictedFooterStyleProvider_1.useFooterStyles)();
    return ((0, jsx_runtime_1.jsx)(react_2.Box, Object.assign({ __css: styles.container }, props, { children: children })));
};
exports.RestrictedCompactFooter.Container = RestrictedCompactFooterContainer;
exports.RestrictedCompactFooter.Container.displayName =
    'RestrictedCompactFooter.Container';
