"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SpinnerIcon = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const react_2 = require("@chakra-ui/react");
const icons_1 = require("../icons");
const spin = (0, react_2.keyframes)({
    '0%': {
        transform: 'rotate(0deg)',
    },
    '100%': {
        transform: 'rotate(360deg)',
    },
});
const SpinnerIcon = (_a) => {
    var { speed = '2.5s' } = _a, props = __rest(_a, ["speed"]);
    const prefersReducedMotion = (0, react_2.usePrefersReducedMotion)();
    const animation = (0, react_1.useMemo)(() => prefersReducedMotion ? undefined : `${spin} ${speed} linear infinite`, [prefersReducedMotion, speed]);
    return (0, jsx_runtime_1.jsx)(react_2.Icon, Object.assign({ animation: animation, as: icons_1.BxLoader }, props));
};
exports.SpinnerIcon = SpinnerIcon;
