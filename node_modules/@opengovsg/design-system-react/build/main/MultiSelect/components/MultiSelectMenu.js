"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MultiSelectMenu = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_virtuoso_1 = require("react-virtuoso");
const react_1 = require("@chakra-ui/react");
const SingleSelect_1 = require("../../SingleSelect");
const components_1 = require("../../SingleSelect/components");
const constants_1 = require("../../SingleSelect/constants");
const utils_1 = require("../../SingleSelect/utils");
const MultiDropdownItem_1 = require("./MultiDropdownItem");
const MultiSelectMenu = () => {
    const { getMenuProps, isOpen, items, nothingFoundLabel, styles, virtualListRef, virtualListHeight, size, } = (0, SingleSelect_1.useSelectContext)();
    const { floatingRef, floatingStyles } = (0, components_1.useSelectPopover)();
    return ((0, jsx_runtime_1.jsx)(react_1.Portal, { children: (0, jsx_runtime_1.jsxs)(react_1.List, Object.assign({ style: floatingStyles }, getMenuProps({
            hidden: !isOpen,
            ref: floatingRef,
        }, {
            suppressRefError: true,
        }), { sx: styles.list, children: [isOpen && items.length > 0 && ((0, jsx_runtime_1.jsx)(react_virtuoso_1.Virtuoso, { ref: virtualListRef, data: items, overscan: constants_1.VIRTUAL_LIST_OVERSCAN_HEIGHT[size], style: { height: virtualListHeight }, itemContent: (index, item) => {
                        return ((0, jsx_runtime_1.jsx)(MultiDropdownItem_1.MultiDropdownItem, { item: item, index: index }, `${(0, utils_1.itemToValue)(item)}${index}`));
                    } })), isOpen && items.length === 0 ? ((0, jsx_runtime_1.jsx)(react_1.ListItem, { role: "option", sx: styles.emptyItem, children: nothingFoundLabel })) : null] })) }));
};
exports.MultiSelectMenu = MultiSelectMenu;
