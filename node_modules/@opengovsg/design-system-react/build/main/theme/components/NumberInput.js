"use strict";
var _a, _b, _c, _d, _e, _f;
Object.defineProperty(exports, "__esModule", { value: true });
exports.NumberInput = void 0;
const react_1 = require("@chakra-ui/react");
const theme_tools_1 = require("@chakra-ui/theme-tools");
const Input_1 = require("./Input");
// This numberinput component anatomy is distinct from the one in ChakraUI's
// core library.
const parts = (0, theme_tools_1.anatomy)('numberinput').parts('root', 'field', 'stepper', 'stepperButton', 'stepperWrapper', 'stepperDivider');
const { definePartsStyle, defineMultiStyleConfig } = (0, react_1.createMultiStyleConfigHelpers)(parts.keys);
const baseStyle = definePartsStyle({
    root: {
        position: 'relative',
        zIndex: 0,
    },
    stepperWrapper: {
        zIndex: 1,
        display: 'flex',
        alignItems: 'center',
        pos: 'absolute',
        right: 0,
        top: 0,
        border: '1px solid transparent',
    },
    stepperButton: {
        color: 'base.content.strong',
        borderRadius: 0,
        minH: '100%',
        _disabled: {
            cursor: 'not-allowed',
        },
        _last: {
            borderRightRadius: '4px',
        },
    },
});
const sizes = {
    xs: definePartsStyle({
        stepper: {
            fontSize: '1rem',
        },
        stepperWrapper: {
            h: (_a = Input_1.Input.sizes) === null || _a === void 0 ? void 0 : _a.xs.field.h,
        },
        field: (_b = Input_1.Input.sizes) === null || _b === void 0 ? void 0 : _b.xs.field,
        stepperDivider: {
            h: '1rem',
        },
    }),
    sm: definePartsStyle({
        stepper: {
            fontSize: '1rem',
        },
        stepperWrapper: {
            h: (_c = Input_1.Input.sizes) === null || _c === void 0 ? void 0 : _c.sm.field.h,
        },
        field: (_d = Input_1.Input.sizes) === null || _d === void 0 ? void 0 : _d.sm.field,
        stepperDivider: {
            h: '1rem',
        },
    }),
    md: definePartsStyle({
        stepper: {
            fontSize: '1rem',
        },
        stepperWrapper: {
            h: (_e = Input_1.Input.sizes) === null || _e === void 0 ? void 0 : _e.md.field.h,
        },
        field: (_f = Input_1.Input.sizes) === null || _f === void 0 ? void 0 : _f.md.field,
        stepperDivider: {
            h: '1.25rem',
        },
    }),
};
const variantOutline = definePartsStyle((props) => {
    var _a;
    return ({
        field: (_a = Input_1.Input.variants) === null || _a === void 0 ? void 0 : _a.outline(props).field,
    });
});
const variants = {
    outline: variantOutline,
};
exports.NumberInput = defineMultiStyleConfig({
    baseStyle,
    sizes,
    variants: variants,
    defaultProps: Input_1.Input.defaultProps,
});
