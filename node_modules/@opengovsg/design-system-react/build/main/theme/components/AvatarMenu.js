"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AvatarMenu = void 0;
const react_1 = require("@chakra-ui/react");
const theme_tools_1 = require("@chakra-ui/theme-tools");
const layerStyles_1 = require("../layerStyles");
const parts = (0, theme_tools_1.anatomy)('avatarMenu').parts('button', 'avatar', 'list');
const { definePartsStyle, defineMultiStyleConfig } = (0, react_1.createMultiStyleConfigHelpers)(parts.keys);
const getAvatarSubtleColorProps = ({ colorScheme: c }) => {
    switch (c) {
        case 'main':
        case 'success':
        case 'critical':
        case 'warning':
        case 'sub':
            return {
                hoverBg: `interaction.${c}-subtle.hover`,
                activeBg: `interaction.${c}-subtle.active`,
            };
        default:
            return {
                hoverBg: `${c}.100`,
                activeBg: `${c}.200`,
            };
    }
};
const getAvatarSolidColorProps = ({ colorScheme: c }) => {
    switch (c) {
        case 'main':
        case 'success':
        case 'critical':
        case 'warning':
        case 'sub':
            return {
                hoverBg: `interaction.${c}.hover`,
                activeBg: `interaction.${c}.active`,
            };
        default:
            return {
                hoverBg: `${c}.600`,
                activeBg: `${c}.700`,
            };
    }
};
const variantSolid = definePartsStyle((props) => {
    const { hoverBg, activeBg } = getAvatarSolidColorProps(props);
    return {
        avatar: {
            _groupActive: {
                bg: activeBg,
            },
            _groupHover: {
                bg: hoverBg,
            },
        },
    };
});
const variantSubtle = definePartsStyle((props) => {
    const { hoverBg, activeBg } = getAvatarSubtleColorProps(props);
    return {
        avatar: {
            _groupActive: {
                bg: activeBg,
            },
            _groupHover: {
                bg: hoverBg,
            },
        },
    };
});
const variants = {
    subtle: variantSubtle,
    solid: variantSolid,
};
const baseStyle = definePartsStyle({
    button: {
        px: '0',
        bg: 'transparent',
        color: 'base.content.strong',
        _hover: {
            bg: 'transparent',
        },
        _active: {
            bg: 'transparent',
        },
        _focusVisible: {
            outline: 'none',
        },
    },
    avatar: {
        transitionProperty: 'common',
        transitionDuration: 'normal',
        _groupFocus: layerStyles_1.layerStyles.focusRing.default._focusVisible,
        _groupActive: Object.assign({}, layerStyles_1.layerStyles.focusRing.default._focusVisible),
    },
});
const sizes = {
    md: definePartsStyle({
        list: {
            mt: '0.375rem',
        },
    }),
};
exports.AvatarMenu = defineMultiStyleConfig({
    baseStyle,
    sizes,
    variants,
    defaultProps: {
        variant: 'solid',
        colorScheme: 'main',
        size: 'md',
    },
});
