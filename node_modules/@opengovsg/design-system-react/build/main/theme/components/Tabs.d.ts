import type { StyleFunctionProps } from '@chakra-ui/theme-tools';
export declare const Tabs: {
    baseStyle?: (({ orientation }: StyleFunctionProps) => {
        tablist: {
            overflowX: string | undefined;
            overflowY: string | undefined;
            whiteSpace: string;
            scrollbarWidth: number;
            '&::-webkit-scrollbar': {
                width: number;
                height: number;
            };
        };
        tabpanel: {
            p: string;
        };
    }) | undefined;
    sizes?: {
        sm: ({ orientation }: StyleFunctionProps) => {
            tablist: {
                gap: string | number;
            };
            tab: {
                fontWeight: number;
                lineHeight: string;
                fontSize: string;
                letterSpacing: number;
                fontFamily: string;
                px: string | number;
                py: string;
            };
        };
        md: ({ orientation }: StyleFunctionProps) => {
            tablist: {
                gap: string | number;
            };
            tab: {
                fontWeight: number;
                lineHeight: string;
                fontSize: string;
                letterSpacing: string;
                fontFamily: string;
                textTransform: string;
                px: string | number;
                py: string;
                mx: string;
            };
        };
    } | undefined;
    variants?: {
        line: (props: StyleFunctionProps) => {
            tablist: {
                [x: string]: string;
                borderColor: string;
            };
            tab: {
                [x: string]: string | number | {
                    fontWeight: number;
                    lineHeight: string;
                    fontSize: string;
                    letterSpacing: string;
                    fontFamily: string;
                    textTransform: string;
                    _dark: {
                        [x: string]: string;
                    };
                    borderColor: string;
                    _hover: {
                        borderColor: string;
                    };
                } | {
                    [x: string]: string;
                    borderColor?: undefined;
                    _dark?: undefined;
                } | {
                    [x: string]: string | {
                        [x: string]: string;
                    };
                    borderColor: string;
                    _dark: {
                        [x: string]: string;
                    };
                } | {
                    outlineOffset: number;
                    _dark: {
                        boxShadow: string;
                        outline: string;
                        outlineOffset: string;
                    };
                    boxShadow: string;
                    outline: string;
                    borderColor?: undefined;
                };
                justifyContent: string;
                mt: string | number;
                textTransform: string;
                color: string;
                bg: string;
                borderColor: string;
                outlineOffset: number;
                _selected: {
                    fontWeight: number;
                    lineHeight: string;
                    fontSize: string;
                    letterSpacing: string;
                    fontFamily: string;
                    textTransform: string;
                    _dark: {
                        [x: string]: string;
                    };
                    borderColor: string;
                    _hover: {
                        borderColor: string;
                    };
                };
                _active: {
                    [x: string]: string;
                };
                _hover: {
                    [x: string]: string | {
                        [x: string]: string;
                    };
                    borderColor: string;
                    _dark: {
                        [x: string]: string;
                    };
                };
                _focusVisible: {
                    outlineOffset: number;
                    _dark: {
                        boxShadow: string;
                        outline: string;
                        outlineOffset: string;
                    };
                    boxShadow: string;
                    outline: string;
                };
            };
        };
    } | undefined;
    defaultProps?: {
        size?: "sm" | "md" | undefined;
        variant?: "line" | undefined;
        colorScheme?: string | undefined;
    } | undefined;
    parts: ("tab" | "tablist" | "tabpanel" | "tabpanels" | "root" | "indicator")[];
};
