"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Switch = void 0;
const anatomy_1 = require("@chakra-ui/anatomy");
const react_1 = require("@chakra-ui/react");
const layerStyles_1 = require("../layerStyles");
const parts = anatomy_1.switchAnatomy.extend('thumbIcon');
const { definePartsStyle, defineMultiStyleConfig } = (0, react_1.createMultiStyleConfigHelpers)(parts.keys);
const getTrackColor = ({ colorScheme: c }) => {
    switch (c) {
        case 'success':
        case 'main':
        case 'critical':
        case 'warning':
            return `interaction.${c}.default`;
        default:
            return `${c}.500`;
    }
};
const baseStyle = definePartsStyle((props) => {
    const trackColor = getTrackColor(props);
    return {
        track: {
            bg: 'interaction.support.unselected',
            _checked: {
                bg: trackColor,
            },
            _groupDisabled: {
                bg: 'interaction.support.disabled',
                opacity: 1,
            },
            p: 0,
            outlineWidth: '1px',
            _focusVisible: Object.assign(Object.assign({}, layerStyles_1.layerStyles.focusRing.default._focusVisible), { outlineWidth: '1px' }),
            _focus: {
                boxShadow: 'none',
            },
        },
        thumb: {
            // To centre icon
            display: 'flex',
            justifyContent: 'center',
            alignItems: 'center',
            _groupDisabled: {
                bg: 'interaction.support.unselected',
            },
        },
        thumbIcon: {
            color: 'interaction.support.unselected',
            _checked: {
                color: trackColor,
            },
            _groupDisabled: {
                color: 'interaction.support.disabled',
            },
        },
    };
});
const sizes = {
    sm: definePartsStyle({
        track: {
            w: '2rem',
            h: '1.25rem',
        },
        thumb: {
            w: '1.125rem',
            h: '1.125rem',
            m: '1px',
            _checked: {
                // Ensure that thumb travels the correct distance
                transform: 'translateX(0.75rem)',
            },
        },
        thumbIcon: {
            fontSize: '0.75rem',
        },
    }),
    md: definePartsStyle({
        track: {
            w: '2.5rem',
            h: '1.5rem',
        },
        thumb: {
            w: '1.375rem',
            h: '1.375rem',
            m: '1px',
            _checked: {
                // Ensure that thumb travels the correct distance
                transform: 'translateX(1rem)',
            },
        },
        thumbIcon: {
            fontSize: '1rem',
        },
    }),
    lg: definePartsStyle({
        track: {
            w: '3rem',
            h: '1.75rem',
        },
        thumb: {
            w: '1.625rem',
            h: '1.625rem',
            m: '1px',
            _checked: {
                // Ensure that thumb travels the correct distance
                transform: 'translateX(1.25rem)',
            },
        },
        thumbIcon: {
            fontSize: '1.25rem',
        },
    }),
};
exports.Switch = defineMultiStyleConfig({
    baseStyle,
    sizes,
    defaultProps: {
        size: 'md',
        colorScheme: 'success',
    },
});
