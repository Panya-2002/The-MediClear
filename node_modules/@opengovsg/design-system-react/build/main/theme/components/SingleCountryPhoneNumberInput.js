"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SingleCountryPhoneNumberInput = void 0;
const react_1 = require("@chakra-ui/react");
const theme_tools_1 = require("@chakra-ui/theme-tools");
const Input_1 = require("./Input");
const parts = (0, theme_tools_1.anatomy)('singlecountryphonenumberinput').parts('field', 'iconContainer', 'icon');
const { definePartsStyle, defineMultiStyleConfig } = (0, react_1.createMultiStyleConfigHelpers)(parts.keys);
const variantOutline = definePartsStyle((props) => {
    var _a;
    const { isSuccess } = props;
    const inputStyle = (_a = Input_1.Input.variants) === null || _a === void 0 ? void 0 : _a.outline(props);
    return {
        field: Object.assign(Object.assign({}, (isSuccess ? { paddingInlineEnd: '4.75rem' } : {})), inputStyle === null || inputStyle === void 0 ? void 0 : inputStyle.field),
        icon: {
            w: '1.5em',
        },
        iconContainer: Object.assign(Object.assign({ pointerEvents: 'none' }, (isSuccess ? { mr: '2rem' } : {})), { _disabled: {
                opacity: 0.6,
            } }),
    };
});
const variants = {
    outline: variantOutline,
};
const sizes = {
    xs: definePartsStyle(({ isSuccess }) => {
        var _a;
        return {
            field: {
                paddingInlineEnd: isSuccess ? '4rem' : undefined,
            },
            iconContainer: Object.assign(Object.assign({}, (_a = Input_1.Input.sizes) === null || _a === void 0 ? void 0 : _a.xs.element), { w: 'auto', px: '0.5rem' }),
            icon: {
                fontSize: '0.75rem',
            },
        };
    }),
    sm: definePartsStyle(({ isSuccess }) => {
        var _a;
        return {
            field: {
                paddingInlineEnd: isSuccess ? '4.75rem' : undefined,
            },
            iconContainer: Object.assign(Object.assign({}, (_a = Input_1.Input.sizes) === null || _a === void 0 ? void 0 : _a.sm.element), { w: 'auto', px: '0.5rem' }),
            icon: {
                fontSize: '1rem',
            },
        };
    }),
    md: definePartsStyle(({ isSuccess }) => {
        var _a;
        return {
            field: {
                paddingInlineEnd: isSuccess ? '4.75rem' : undefined,
            },
            icon: {
                fontSize: '1rem',
            },
            iconContainer: Object.assign(Object.assign({}, (_a = Input_1.Input.sizes) === null || _a === void 0 ? void 0 : _a.md.element), { w: 'auto', px: '0.5rem' }),
        };
    }),
};
exports.SingleCountryPhoneNumberInput = defineMultiStyleConfig({
    variants,
    sizes,
    defaultProps: Input_1.Input.defaultProps,
});
