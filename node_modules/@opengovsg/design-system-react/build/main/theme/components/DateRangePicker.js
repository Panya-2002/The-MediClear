"use strict";
var _a, _b, _c, _d, _e, _f;
Object.defineProperty(exports, "__esModule", { value: true });
exports.DateRangePicker = void 0;
const react_1 = require("@chakra-ui/react");
const DatePicker_1 = require("./DatePicker");
const Input_1 = require("./Input");
const parts = DatePicker_1.datepickerAnatomy.extend('fieldwrapper', 'field');
const { definePartsStyle, defineMultiStyleConfig } = (0, react_1.createMultiStyleConfigHelpers)(parts.keys);
const variantOutline = definePartsStyle((props) => {
    var _a;
    const inputFieldVariantOutline = (_a = Input_1.Input.variants) === null || _a === void 0 ? void 0 : _a.outline(props).field;
    return {
        fieldwrapper: Object.assign(Object.assign({}, inputFieldVariantOutline), { cursor: 'text', flex: 1, zIndex: 1, px: '1rem', borderEndRadius: '0', marginInlineEnd: '-1px', transitionProperty: 'common', transitionDuration: 'normal', _focusWithin: inputFieldVariantOutline === null || inputFieldVariantOutline === void 0 ? void 0 : inputFieldVariantOutline._focusVisible }),
        field: {
            _disabled: {
                cursor: 'not-allowed',
            },
            transitionProperty: 'common',
            transitionDuration: 'normal',
            display: 'flex',
            flex: 1,
        },
    };
});
const sizes = {
    xs: definePartsStyle({
        fieldwrapper: (_a = Input_1.Input.sizes) === null || _a === void 0 ? void 0 : _a.xs.field,
        inputButton: (_b = DatePicker_1.DatePicker.sizes) === null || _b === void 0 ? void 0 : _b.xs.inputButton,
    }),
    sm: definePartsStyle({
        fieldwrapper: (_c = Input_1.Input.sizes) === null || _c === void 0 ? void 0 : _c.sm.field,
        inputButton: (_d = DatePicker_1.DatePicker.sizes) === null || _d === void 0 ? void 0 : _d.sm.inputButton,
    }),
    md: definePartsStyle({
        fieldwrapper: (_e = Input_1.Input.sizes) === null || _e === void 0 ? void 0 : _e.md.field,
        inputButton: (_f = DatePicker_1.DatePicker.sizes) === null || _f === void 0 ? void 0 : _f.md.inputButton,
    }),
};
const variants = {
    outline: variantOutline,
};
exports.DateRangePicker = defineMultiStyleConfig({
    variants,
    sizes,
    baseStyle: DatePicker_1.DatePicker.baseStyle,
    defaultProps: {
        variant: 'outline',
        size: 'md',
    },
});
