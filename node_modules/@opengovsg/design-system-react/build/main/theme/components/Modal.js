"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Modal = void 0;
const anatomy_1 = require("@chakra-ui/anatomy");
const react_1 = require("@chakra-ui/react");
const textStyles_1 = require("../textStyles");
const { definePartsStyle, defineMultiStyleConfig } = (0, react_1.createMultiStyleConfigHelpers)(anatomy_1.modalAnatomy.keys);
const baseStyleOverlay = (0, react_1.defineStyle)({
    bg: 'rgba(0, 0, 0, 0.65)',
});
const baseStyleDialog = (0, react_1.defineStyle)((props) => {
    const { scrollBehavior } = props;
    return {
        borderRadius: 'base',
        my: '8rem',
        maxH: scrollBehavior === 'inside' ? 'calc(100% - 16rem)' : undefined,
        boxShadow: 'md',
    };
});
const baseStyle = definePartsStyle((props) => ({
    overlay: baseStyleOverlay,
    dialog: baseStyleDialog(props),
}));
const fullDialogStyle = {
    maxW: '100vw',
    minH: '100vh',
    my: 0,
    borderRadius: 0,
};
const sizes = {
    mobile: definePartsStyle({
        header: Object.assign({ pt: '2rem', pb: '1.5rem', px: '1.5rem' }, textStyles_1.textStyles['h5']),
        body: {
            flex: 'initial',
        },
        dialog: fullDialogStyle,
        closeButton: {
            top: '1.5rem',
            insetEnd: '1.5rem',
        },
    }),
    md: definePartsStyle({
        dialog: { maxW: '42.5rem' },
        header: Object.assign(Object.assign({}, textStyles_1.textStyles['h4']), { pt: '2rem', pb: '1rem', px: '2rem' }),
        closeButton: {
            top: '1.5rem',
            insetEnd: '2rem',
        },
        body: {
            py: 0,
            px: '2rem',
        },
        footer: {
            pt: '2rem',
            pb: '2.75rem',
            px: '2rem',
        },
    }),
    full: definePartsStyle({
        overlay: {
            bg: 'none',
        },
        dialog: fullDialogStyle,
        header: Object.assign(Object.assign({}, textStyles_1.textStyles['h4']), { p: '1.5rem' }),
        closeButton: {
            top: '1.5rem',
            insetEnd: '1.5rem',
        },
    }),
};
exports.Modal = defineMultiStyleConfig({
    baseStyle,
    sizes,
});
