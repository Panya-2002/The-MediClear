"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CalendarAria = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const react_2 = require("@chakra-ui/react");
const CalendarContext_1 = require("./CalendarContext");
const utils_1 = require("./utils");
exports.CalendarAria = (0, react_1.memo)(() => {
    const { monthsToDisplay, currMonth, currYear, selectedDates } = (0, CalendarContext_1.useCalendar)();
    const displayedMonthsAriaLiveText = (0, react_1.useMemo)(() => {
        const endMonthNum = (currMonth + monthsToDisplay - 1) % 12;
        const startMonth = utils_1.MONTH_NAMES[currMonth].fullName;
        const endMonth = utils_1.MONTH_NAMES[endMonthNum].fullName;
        if (startMonth === endMonth) {
            return `Currently displaying ${utils_1.MONTH_NAMES[currMonth].fullName} ${currYear}`;
        }
        if (endMonthNum < currMonth) {
            return `Currently displaying ${startMonth} ${currYear} to ${endMonth} ${currYear + 1}`;
        }
        return `Currently displaying ${startMonth} ${currYear} to ${endMonth} ${currYear}`;
    }, [currMonth, currYear, monthsToDisplay]);
    const selectedDatesAriaLiveText = (0, react_1.useMemo)(() => {
        if (!selectedDates) {
            return 'No date selected';
        }
        if (selectedDates instanceof Date) {
            return `Selected date: ${selectedDates.toLocaleDateString()}`;
        }
        // Date range values handling
        const [startDate, endDate] = selectedDates;
        if (!startDate && !endDate) {
            return 'No date selected';
        }
        if (startDate && !endDate) {
            return `Selected date: ${startDate.toLocaleDateString()}`;
        }
        return `Selected date range: ${startDate === null || startDate === void 0 ? void 0 : startDate.toLocaleDateString()} to ${endDate === null || endDate === void 0 ? void 0 : endDate.toLocaleDateString()}`;
    }, [selectedDates]);
    return ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)(react_2.VisuallyHidden, { "aria-live": "polite", "aria-atomic": true, children: displayedMonthsAriaLiveText }), (0, jsx_runtime_1.jsx)(react_2.VisuallyHidden, { "aria-live": "polite", "aria-atomic": true, children: selectedDatesAriaLiveText })] }));
});
