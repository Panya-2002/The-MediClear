"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BxCheckAnimated = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const framer_motion_1 = require("framer-motion");
const lodash_1 = require("lodash");
const BxCheckAnimated = (_a) => {
    var { isChecked } = _a, props = __rest(_a, ["isChecked"]);
    // Required to prevent React warnings about unsupported props
    const svgProps = (0, lodash_1.omit)(props, ['isIndeterminate']);
    return ((0, jsx_runtime_1.jsx)("svg", Object.assign({ viewBox: "0 0 12 10", fill: "currentColor", height: "1em", width: "1em" }, svgProps, { children: (0, jsx_runtime_1.jsx)(framer_motion_1.motion.polyline, { points: "1.5 6 4.5 9 10.5 1", style: {
                fill: 'none',
                strokeWidth: 2,
                stroke: 'currentColor',
                strokeDasharray: 16,
            }, variants: {
                checked: {
                    opacity: 1,
                    scale: 1,
                    strokeDashoffset: 0,
                    transition: { duration: 0.2 },
                },
                unchecked: {
                    opacity: 0,
                    scale: 0.8,
                    strokeDashoffset: 16,
                },
            }, animate: isChecked ? 'checked' : 'unchecked', initial: "unchecked" }) })));
};
exports.BxCheckAnimated = BxCheckAnimated;
