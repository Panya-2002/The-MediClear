"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ToggleChevron = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("@chakra-ui/react");
const BxsChevronDown_1 = require("./BxsChevronDown");
/**
 * ToggleChevron that gives a visual cue of the open/close state of the item.
 * It rotates `180deg` based on the open/close state.
 */
exports.ToggleChevron = (0, react_1.forwardRef)((_a, ref) => {
    var { isOpen, reduceMotion, styles } = _a, props = __rest(_a, ["isOpen", "reduceMotion", "styles"]);
    const iconStyles = Object.assign({ transform: isOpen ? 'rotate(-180deg)' : undefined, transition: reduceMotion ? undefined : 'transform 0.2s', transformOrigin: 'center' }, styles);
    return ((0, jsx_runtime_1.jsx)(react_1.Icon, Object.assign({ ref: ref, viewBox: "0 0 24 24", __css: iconStyles, as: BxsChevronDown_1.BxsChevronDown }, props)));
});
