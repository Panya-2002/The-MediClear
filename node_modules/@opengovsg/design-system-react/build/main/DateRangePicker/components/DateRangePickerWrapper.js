"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DateRangePickerWrapper = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("@chakra-ui/react");
const DateRangePickerContext_1 = require("../DateRangePickerContext");
const DateRangePickerInput_1 = require("./DateRangePickerInput");
// eslint-disable-next-line @typescript-eslint/ban-types
exports.DateRangePickerWrapper = (0, react_1.forwardRef)(({ children }, ref) => {
    const { styles, disclosureProps, initialFocusRef, closeCalendarOnChange, handleFieldContainerClick, isMobile, fcProps: { isInvalid, isDisabled, isReadOnly }, } = (0, DateRangePickerContext_1.useDateRangePicker)();
    if (isMobile) {
        return ((0, jsx_runtime_1.jsxs)(react_1.Flex, { children: [(0, jsx_runtime_1.jsx)(react_1.Flex, { sx: styles.fieldwrapper, "aria-disabled": isDisabled, "aria-invalid": isInvalid, "aria-readonly": isReadOnly, onClick: handleFieldContainerClick, overflowX: "hidden", children: (0, jsx_runtime_1.jsx)(DateRangePickerInput_1.DateRangePickerInput, { ref: ref }) }), children] }));
    }
    return ((0, jsx_runtime_1.jsx)(react_1.Flex, { children: (0, jsx_runtime_1.jsxs)(react_1.Popover, Object.assign({ placement: "bottom-start", isLazy: true, initialFocusRef: initialFocusRef, closeOnBlur: closeCalendarOnChange, returnFocusOnClose: false }, disclosureProps, { children: [(0, jsx_runtime_1.jsx)(react_1.PopoverAnchor, { children: (0, jsx_runtime_1.jsx)(react_1.Flex, { "aria-disabled": isDisabled, "aria-invalid": isInvalid, "aria-readonly": isReadOnly, sx: styles.fieldwrapper, onClick: handleFieldContainerClick, children: (0, jsx_runtime_1.jsx)(DateRangePickerInput_1.DateRangePickerInput, { ref: ref }) }) }), children] })) }));
});
exports.DateRangePickerWrapper.displayName = 'DateRangePickerWrapper';
