"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Sidebar = exports.generateSidebarItems = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const SidebarContainer_1 = require("./SidebarContainer");
const SidebarHeader_1 = require("./SidebarHeader");
const SidebarItem_1 = require("./SidebarItem");
const SidebarList_1 = require("./SidebarList");
const isNestableItem = (item) => {
    return 'subItems' in item;
};
const isHeaderItem = (item) => {
    return 'type' in item && item.type === 'header';
};
// Generate recursive sidebar items if nested
const generateSidebarItems = (items) => {
    return items.map((item, index) => {
        if (isNestableItem(item)) {
            const { label, icon, subItems, props } = item, rest = __rest(item, ["label", "icon", "subItems", "props"]);
            return ((0, jsx_runtime_1.jsx)(SidebarList_1.SidebarList, Object.assign({ label: label, icon: icon }, props, rest, { children: (0, exports.generateSidebarItems)(subItems) }), index));
        }
        if (isHeaderItem(item)) {
            return (0, jsx_runtime_1.jsx)(SidebarHeader_1.SidebarHeader, Object.assign({}, item), index);
        }
        const { props } = item, rest = __rest(item, ["props"]);
        return (0, jsx_runtime_1.jsx)(SidebarItem_1.SidebarItem, Object.assign({}, rest, props), index);
    });
};
exports.generateSidebarItems = generateSidebarItems;
const Sidebar = (_a) => {
    var { items } = _a, rest = __rest(_a, ["items"]);
    const sidebarItems = (0, react_1.useMemo)(() => (0, exports.generateSidebarItems)(items), [items]);
    return (0, jsx_runtime_1.jsx)(SidebarContainer_1.SidebarContainer, Object.assign({}, rest, { children: sidebarItems }));
};
exports.Sidebar = Sidebar;
