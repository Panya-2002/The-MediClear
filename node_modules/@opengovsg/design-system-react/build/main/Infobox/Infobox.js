"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Infobox = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const react_2 = require("@chakra-ui/react");
const icons_1 = require("../icons");
const Infobox = (_a) => {
    var { variant = 'info', children, icon: iconProp, size } = _a, flexProps = __rest(_a, ["variant", "children", "icon", "size"]);
    const styles = (0, react_2.useMultiStyleConfig)('Infobox', { variant, size });
    const iconToRender = (0, react_1.useMemo)(() => {
        if (iconProp) {
            return (0, jsx_runtime_1.jsx)(react_2.Box, { __css: styles.icon, children: iconProp });
        }
        return ((0, jsx_runtime_1.jsx)(react_2.Icon, { as: variant !== 'error' ? icons_1.BxsInfoCircle : icons_1.BxsErrorCircle, __css: styles.icon }));
    }, [iconProp, styles.icon, variant]);
    return ((0, jsx_runtime_1.jsxs)(react_2.Flex, Object.assign({ sx: styles.messagebox }, flexProps, { children: [iconToRender, children] })));
};
exports.Infobox = Infobox;
