"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Input = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("@chakra-ui/react");
const lodash_1 = require("lodash");
const BxsCheckCircle_1 = require("../icons/BxsCheckCircle");
exports.Input = (0, react_1.forwardRef)((props, ref) => {
    const inputStyles = (0, react_1.useMultiStyleConfig)('Input', props);
    // Omit extra props so they will not be passed into the DOM and trigger
    // React warnings.
    const inputProps = (0, lodash_1.omit)(props, ['isSuccess', 'isPrefilled']);
    // Return normal input component if not success state.
    if (!props.isSuccess) {
        return (0, jsx_runtime_1.jsx)(react_1.Input, Object.assign({ ref: ref, __css: inputStyles.field }, inputProps));
    }
    return (
    // InputGroup is required for InputRightElement to retrieve the correct
    // style props. Will crash if not included.
    (0, jsx_runtime_1.jsxs)(react_1.InputGroup, { children: [(0, jsx_runtime_1.jsx)(react_1.Input, Object.assign({ ref: ref, sx: (0, lodash_1.merge)({}, inputStyles.field, props.sx) }, inputProps)), (0, jsx_runtime_1.jsx)(react_1.InputRightElement, { sx: inputStyles.success, children: (0, jsx_runtime_1.jsx)(react_1.Icon, { as: BxsCheckCircle_1.BxsCheckCircle }) })] }));
});
/**
 * This is used in by Chakra's `InputGroup` component to remove border radii
 * when paired with `InputLeftAddon` or `InputRightAddon`.
 *
 * See https://github.com/chakra-ui/chakra-ui/blob/main/packages/components/input/src/input.tsx#L70 and
 * https://github.com/chakra-ui/chakra-ui/blob/main/packages/components/input/src/input-group.tsx#L71.
 */
exports.Input.id = 'Input';
exports.Input.displayName = 'Input';
