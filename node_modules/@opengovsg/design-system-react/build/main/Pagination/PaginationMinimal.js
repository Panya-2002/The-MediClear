"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PaginationMinimal = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
/**
 * Mobile variant for the Pagination component.
 */
const react_1 = require("react");
const react_2 = require("@chakra-ui/react");
const icons_1 = require("../icons");
const PaginationMinimal = ({ pageSize, onPageChange, totalCount, currentPage, isDisabled, }) => {
    const styles = (0, react_2.useMultiStyleConfig)('Pagination', { variant: 'minimal' });
    const totalPageCount = Math.ceil(totalCount / pageSize);
    const isDisableNextPage = isDisabled || currentPage >= totalPageCount;
    const isDisablePrevPage = isDisabled || currentPage <= 1;
    const handlePageBack = (0, react_1.useCallback)(() => {
        if (isDisablePrevPage)
            return;
        onPageChange(currentPage - 1);
    }, [currentPage, isDisablePrevPage, onPageChange]);
    const handlePageNext = (0, react_1.useCallback)(() => {
        if (isDisableNextPage)
            return;
        onPageChange(currentPage + 1);
    }, [currentPage, isDisableNextPage, onPageChange]);
    return ((0, jsx_runtime_1.jsxs)(react_2.Box, { __css: styles.container, children: [(0, jsx_runtime_1.jsx)(react_2.IconButton, { variant: "unstyled", sx: styles.stepper, "aria-label": "Previous page", isDisabled: isDisablePrevPage, onClick: handlePageBack, icon: (0, jsx_runtime_1.jsx)(icons_1.BxChevronLeft, {}) }), (0, jsx_runtime_1.jsxs)(react_2.Text, { sx: styles.text, "aria-disabled": isDisabled, children: ["Page ", currentPage, " of ", totalPageCount] }), (0, jsx_runtime_1.jsx)(react_2.IconButton, { variant: "unstyled", sx: styles.stepper, "aria-label": "Next page", isDisabled: isDisableNextPage, onClick: handlePageNext, icon: (0, jsx_runtime_1.jsx)(icons_1.BxChevronRight, {}) })] }));
};
exports.PaginationMinimal = PaginationMinimal;
