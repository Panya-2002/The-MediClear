/// <reference types="react" />
import { HTMLChakraProps, IconProps, TagCloseButtonProps as ChakraTagCloseButtonProps, TagProps as ChakraTagProps } from '@chakra-ui/react';
export interface TagProps extends ChakraTagProps {
    colorScheme?: ChakraTagProps['colorScheme'] | 'main' | 'success' | 'warning' | 'critical';
}
export declare const TagLeftIcon: import("@chakra-ui/system/dist/system.types").ComponentWithAs<"svg", IconProps>;
export declare const TagRightIcon: import("@chakra-ui/system/dist/system.types").ComponentWithAs<"svg", IconProps>;
export type TagCloseButtonProps = ChakraTagCloseButtonProps;
/** Not using Chakra's TagCloseButton due to inability to override aria-label */
export declare const TagCloseButton: ({ isDisabled, children, ...rest }: TagCloseButtonProps) => JSX.Element;
export type TagLabelProps = HTMLChakraProps<'span'>;
export declare const TagLabel: import("@chakra-ui/system/dist/system.types").ComponentWithAs<"span", TagLabelProps>;
export declare const Tag: import("@chakra-ui/system/dist/system.types").ComponentWithAs<"span", TagProps>;
