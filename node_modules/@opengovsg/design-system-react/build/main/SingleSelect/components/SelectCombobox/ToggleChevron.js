"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ToggleChevron = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("@chakra-ui/react");
const icons_1 = require("../../../icons");
const SelectContext_1 = require("../../SelectContext");
const ToggleChevron = () => {
    const { isOpen, getToggleButtonProps, isDisabled, isReadOnly, styles } = (0, SelectContext_1.useSelectContext)();
    return ((0, jsx_runtime_1.jsx)(react_1.InputRightElement, Object.assign({ as: "button", type: "button", display: "flex", _disabled: {
            cursor: 'not-allowed',
        }, "aria-label": `${isOpen ? 'Close' : 'Open'} dropdown options` }, getToggleButtonProps({
        disabled: isDisabled || isReadOnly,
        // Allow navigation to this button with screen readers.
        tabIndex: 0,
    }), { children: (0, jsx_runtime_1.jsx)(react_1.Icon, { sx: styles.icon, as: isOpen ? icons_1.BxsChevronUp : icons_1.BxsChevronDown, "aria-disabled": isDisabled || isReadOnly }) })));
};
exports.ToggleChevron = ToggleChevron;
// So input group knows to add right padding to the inner input.
exports.ToggleChevron.id = react_1.InputRightElement.id;
