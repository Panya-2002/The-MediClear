"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ComboboxClearButton = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const react_2 = require("@chakra-ui/react");
const IconButton_1 = require("../../../IconButton");
const icons_1 = require("../../../icons");
const SelectContext_1 = require("../../SelectContext");
const ComboboxClearButton = () => {
    const { isClearable, isDisabled, isReadOnly, isInvalid, clearButtonLabel, selectItem, inputValue, inputRef, selectedItem, size, } = (0, SelectContext_1.useSelectContext)();
    const [announceClearedInput, setAnnounceClearedInput] = (0, react_1.useState)(false);
    const handleClearSelection = (0, react_1.useCallback)(() => {
        var _a;
        // Need to focus before selecting null. I have no idea why, but it works
        (_a = inputRef === null || inputRef === void 0 ? void 0 : inputRef.current) === null || _a === void 0 ? void 0 : _a.focus();
        selectItem(null);
        setAnnounceClearedInput(true);
    }, [inputRef, selectItem]);
    (0, react_1.useEffect)(() => {
        if (selectedItem) {
            setAnnounceClearedInput(false);
        }
    }, [inputRef, selectedItem]);
    if (!isClearable)
        return null;
    return ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)(IconButton_1.IconButton
            // Prevent form submission from triggering this button.
            , { 
                // Prevent form submission from triggering this button.
                type: "button", size: size, "aria-invalid": isInvalid, isDisabled: isDisabled || isReadOnly, "aria-label": clearButtonLabel, onClick: handleClearSelection, 
                // Unmount the visually hidden announcement when navigated to this button
                onFocus: () => setAnnounceClearedInput(false), variant: "inputAttached", icon: (0, jsx_runtime_1.jsx)(icons_1.BxX, {}), isActive: !!inputValue || !!selectedItem }), announceClearedInput && ((0, jsx_runtime_1.jsx)(react_2.VisuallyHidden, { "aria-live": "assertive", children: "Selection has been cleared" }))] }));
};
exports.ComboboxClearButton = ComboboxClearButton;
