"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DropdownItem = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const react_2 = require("@chakra-ui/react");
const utils_1 = require("@chakra-ui/utils");
const SelectContext_1 = require("../../SelectContext");
const itemUtils_1 = require("../../utils/itemUtils");
const DropdownItemTextHighlighter_1 = require("./DropdownItemTextHighlighter");
const DropdownItem = ({ item, index, }) => {
    const { getItemProps, isItemSelected, inputValue, styles } = (0, SelectContext_1.useSelectContext)();
    const { icon, label, description, isDisabled, isActive } = (0, react_1.useMemo)(() => ({
        icon: (0, itemUtils_1.itemToIcon)(item),
        label: (0, itemUtils_1.itemToLabelString)(item),
        description: (0, itemUtils_1.itemToDescriptionString)(item),
        isDisabled: (0, itemUtils_1.isItemDisabled)(item),
        isActive: isItemSelected(item),
    }), [isItemSelected, item]);
    return ((0, jsx_runtime_1.jsx)(react_2.ListItem, Object.assign({ sx: styles.item, "data-active": (0, utils_1.dataAttr)(isActive) }, getItemProps({
        item,
        index,
        disabled: isDisabled,
    }), { children: (0, jsx_runtime_1.jsxs)(react_2.Flex, { flexDir: "column", children: [(0, jsx_runtime_1.jsxs)(react_2.Stack, { direction: "row", align: "center", spacing: "1rem", children: [icon ? (0, jsx_runtime_1.jsx)(react_2.Icon, { as: icon, sx: styles.icon }) : null, (0, jsx_runtime_1.jsx)(react_2.Text, { minWidth: 0, textOverflow: "ellipsis", whiteSpace: "nowrap", overflowX: "hidden", children: (0, jsx_runtime_1.jsx)(DropdownItemTextHighlighter_1.DropdownItemTextHighlighter, { inputValue: inputValue !== null && inputValue !== void 0 ? inputValue : '', textToHighlight: label }) })] }), description && ((0, jsx_runtime_1.jsx)(react_2.Text, { sx: styles.itemDescription, children: (0, jsx_runtime_1.jsx)(DropdownItemTextHighlighter_1.DropdownItemTextHighlighter, { inputValue: inputValue !== null && inputValue !== void 0 ? inputValue : '', textToHighlight: description }) }))] }) })));
};
exports.DropdownItem = DropdownItem;
