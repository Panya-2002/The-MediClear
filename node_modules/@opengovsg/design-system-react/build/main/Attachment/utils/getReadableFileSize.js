"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getByteFileSize = exports.getReadableFileSize = void 0;
const DECIMAL_BYTE_UNITS = ['B', 'kB', 'MB', 'GB', 'TB'];
/**
 * Converts the given file size in bytes to a human readable string.
 *
 * @example 1100000 -> "1.1 MB"
 * @param fileSizeInBytes the size of the file in bytes to be converted to a readable string
 * @returns the human-readable file size string
 */
const getReadableFileSize = (fileSizeInBytes) => {
    const i = Math.floor(Math.log(fileSizeInBytes) / Math.log(1000));
    const size = Number((fileSizeInBytes / Math.pow(1000, i)).toFixed(2));
    return size + ' ' + DECIMAL_BYTE_UNITS[i];
};
exports.getReadableFileSize = getReadableFileSize;
/**
 * Counterpart to getReadableFileSize
 * Converts the given human readable file size string to the corresponding file size in bytes.
 * @example "1.1 MB" -> 1100000
 * @param readableFileSize the human readable file size string to be converted to bytes
 * @returns the file size in bytes
 */
const getByteFileSize = (readableFileSize) => {
    const [size, unit] = readableFileSize.split(' ');
    const unitIndex = DECIMAL_BYTE_UNITS.indexOf(unit);
    return Number(size) * Math.pow(1000, unitIndex);
};
exports.getByteFileSize = getByteFileSize;
