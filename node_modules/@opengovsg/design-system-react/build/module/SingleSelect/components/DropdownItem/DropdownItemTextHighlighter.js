import { jsx as _jsx } from "react/jsx-runtime";
import { useMemo } from 'react';
import { chakra } from '@chakra-ui/react';
import fuzzysort from 'fuzzysort';
import { useSelectContext } from '../../SelectContext';
const HighlightMark = ({ children }) => {
    const { styles } = useSelectContext();
    return _jsx(chakra.mark, { sx: styles.highlight, children: children });
};
export const DropdownItemTextHighlighter = ({ inputValue, textToHighlight, }) => {
    const markedComponents = useMemo(() => {
        const result = fuzzysort.single(inputValue, textToHighlight);
        // Return the original text if no match is found.
        if (!result)
            return textToHighlight;
        return fuzzysort.highlight(result, (m, i) => (_jsx(HighlightMark, { children: m }, i)));
    }, [inputValue, textToHighlight]);
    return _jsx(chakra.span, { children: markedComponents });
};
