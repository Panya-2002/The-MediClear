import { ChangeEventHandler, FocusEventHandler, MouseEventHandler, PropsWithChildren, RefObject } from 'react';
import { FormControlProps, SystemStyleObject, ThemingProps, UseDisclosureReturn } from '@chakra-ui/react';
import { DatePickerProps } from './DatePicker';
interface DatePickerContextReturn {
    isMobile: boolean;
    styles: Record<string, SystemStyleObject>;
    handleInputChange: ChangeEventHandler<HTMLInputElement>;
    handleInputClick: MouseEventHandler<HTMLInputElement>;
    handleDateChange: (date: Date | null) => void;
    calendarButtonAria: string;
    inputRef: RefObject<HTMLInputElement>;
    initialFocusRef: RefObject<HTMLInputElement>;
    handleInputBlur: FocusEventHandler<HTMLInputElement>;
    fcProps: FormControlProps;
    internalInputValue: string;
    internalValue: Date | null;
    closeCalendarOnChange: boolean;
    placeholder: string;
    allowManualInput: boolean;
    colorScheme?: ThemingProps<'DatePicker'>['colorScheme'];
    size?: ThemingProps<'DatePicker'>['size'];
    isDateUnavailable?: (date: Date) => boolean;
    disclosureProps: UseDisclosureReturn;
    monthsToDisplay?: number;
    defaultFocusedDate?: Date;
}
export declare const DatePickerProvider: ({ children, ...props }: PropsWithChildren<DatePickerProps>) => import("react/jsx-runtime").JSX.Element;
export declare const useDatePicker: () => DatePickerContextReturn;
export {};
