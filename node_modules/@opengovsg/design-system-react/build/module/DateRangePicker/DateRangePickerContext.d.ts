import { ChangeEventHandler, FocusEventHandler, MouseEventHandler, PropsWithChildren, RefObject } from 'react';
import { FormControlProps, SystemStyleObject, ThemingProps, UseDisclosureReturn } from '@chakra-ui/react';
import { DateRangeValue } from '../Calendar';
import { DateRangePickerProps } from './DateRangePicker';
interface DateRangePickerContextReturn {
    isMobile: boolean;
    styles: Record<string, SystemStyleObject>;
    handleStartDateChange: ChangeEventHandler<HTMLInputElement>;
    handleEndDateChange: ChangeEventHandler<HTMLInputElement>;
    handleCalendarDateChange: (value: DateRangeValue) => void;
    handleFieldContainerClick: () => void;
    handleInputClick: MouseEventHandler<HTMLInputElement>;
    calendarButtonAria: string;
    startInputRef: RefObject<HTMLInputElement>;
    endInputRef: RefObject<HTMLInputElement>;
    initialFocusRef: RefObject<HTMLInputElement>;
    handleInputBlur: FocusEventHandler<HTMLInputElement>;
    fcProps: FormControlProps;
    internalValue: DateRangeValue;
    startInputDisplay: string;
    endInputDisplay: string;
    closeCalendarOnChange: boolean;
    placeholder: string;
    allowManualInput: boolean;
    isDateUnavailable?: (date: Date) => boolean;
    disclosureProps: UseDisclosureReturn;
    labelSeparator: string;
    colorScheme?: ThemingProps<'DatePicker'>['colorScheme'];
    size?: ThemingProps<'DatePicker'>['size'];
    monthsToDisplay?: number;
}
export declare const DateRangePickerProvider: ({ children, ...props }: PropsWithChildren<DateRangePickerProps>) => import("react/jsx-runtime").JSX.Element;
export declare const useDateRangePicker: () => DateRangePickerContextReturn;
export {};
