import { DropzoneProps } from 'react-dropzone';
import { ThemingProps, UseFormControlProps } from '@chakra-ui/react';
import type { Promisable } from 'type-fest';
export interface AttachmentProps extends UseFormControlProps<HTMLElement> {
    /**
     * Callback to be invoked when the file is attached or removed.
     */
    onChange: (file?: File) => void;
    /**
     * If exists, callback to be invoked when file has errors.
     */
    onError?: (errMsg: string) => void;
    /**
     * Current value of the input.
     */
    value: File | undefined;
    /**
     * Name of the input.
     */
    name: string;
    /**
     * One or more
     * [unique file type specifiers](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#unique_file_type_specifiers)
     * describing file types to allow
     */
    accept?: DropzoneProps['accept'];
    /**
     * If exists, files cannot be attached if they are above the maximum size
     * (in bytes).
     */
    maxSize?: DropzoneProps['maxSize'];
    /**
     * Boolean flag on whether to show the file size helper message below the
     * input.
     */
    showFileSize?: boolean;
    /**
     * If provided, the image preview will be shown in the given size variant.
     */
    imagePreview?: 'small' | 'large';
    /**
     * Color scheme of the component.
     */
    colorScheme?: ThemingProps<'Attachment'>['colorScheme'];
    /**
     * If provided, the file will be validated against the given function.
     * If the function returns a string, the file will be considered invalid
     * and the string will be used as the error message.
     * If the function returns null, the file will be considered valid.
     */
    onFileValidation?: (file: File) => Promisable<string | null>;
}
export declare const Attachment: import("@chakra-ui/system/dist/system.types").ComponentWithAs<"div", AttachmentProps>;
