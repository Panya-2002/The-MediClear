import { FC } from 'react';
import { FormLabelProps as ChakraFormLabelProps, HTMLChakraProps, TextProps, ThemingProps } from '@chakra-ui/react';
export interface FormLabelProps extends ChakraFormLabelProps {
    /**
     * Question number to be prefixed before each label, if any.
     */
    questionNumber?: string;
    /**
     * Tooltip text to be postfixed at the end of each label, if any.
     */
    tooltipText?: string;
    /**
     * Description text to be shown below the label text, if any.
     */
    description?: string;
    /**
     * Label text.
     */
    children: React.ReactNode;
    /**
     * Whether form label is required. This is optional; if this prop is not
     * provided, the value from it's parent `FormContext` (if any) will be used.
     */
    isRequired?: boolean;
}
/**
 * @preconditions Must be a child of Chakra's `FormControl` component.
 * Used to enhance the usability of form controls.
 *
 * It is used to inform users as to what information
 * is requested for a form field.
 *
 * ♿️ Accessibility: Every form field should have a form label.
 */
export declare const FormLabel: {
    ({ isRequired, tooltipText, questionNumber, description, children, size, ...labelProps }: FormLabelProps): JSX.Element;
    displayName: string;
    Label: import("@chakra-ui/system/dist/system.types").ComponentWithAs<"label", ChakraFormLabelProps>;
    Description: FC<FormLabelDescriptionProps>;
    QuestionNumber({ children, ...props }: TextProps): JSX.Element;
    OptionalIndicator: import("@chakra-ui/system/dist/system.types").ComponentWithAs<"span", OptionalIndicatorProps>;
};
interface FormLabelDescriptionProps extends TextProps {
    children: string;
}
interface OptionalIndicatorProps extends HTMLChakraProps<'span'> {
    size?: ThemingProps<'Form'>['size'];
    isRequired?: boolean;
}
export {};
