/**
 * Hook exposing convenient variables for use with `Searchbar` component.
 */
import { useCallback, useEffect, useRef, useState } from 'react';
export const useSearchbar = ({ isInitiallyExpanded = false, isFocusOnExpand = true, }) => {
    const [isExpanded, setIsExpanded] = useState(isInitiallyExpanded);
    const inputRef = useRef(null);
    useEffect(() => {
        if (isFocusOnExpand && isExpanded) {
            inputRef.current?.focus();
        }
    }, [isExpanded, isFocusOnExpand]);
    const handleExpansion = useCallback(() => setIsExpanded(true), []);
    const handleCollapse = useCallback(() => setIsExpanded(false), []);
    return {
        inputRef,
        isExpanded,
        handleExpansion,
        handleCollapse,
    };
};
