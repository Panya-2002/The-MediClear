import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from "react/jsx-runtime";
import { useMemo } from 'react';
import { Avatar, AvatarBadge, MenuDivider, useMultiStyleConfig, } from '@chakra-ui/react';
import { merge } from 'lodash';
import { Menu } from '../Menu';
/**
 * MenuButton styled for avatar
 * Used to wrap Avatar component
 * @preconditions Must be a child of Menu component,
 * and returned using a render prop.
 */
const AvatarMenuButton = (props) => {
    return (_jsx(Menu.Button, { variant: "clear", iconSpacing: "0.25rem", chevronSize: "1.5rem", ...props }));
};
/**
 * MenuDivider styled for avatar
 * @preconditions Must be a child of Menu component,
 */
export const AvatarMenuDivider = () => {
    return _jsx(MenuDivider, { "aria-hidden": true });
};
export const AvatarMenu = ({ name, hasNotification, defaultIsOpen, menuListProps, children, badge = _jsx(AvatarBadge, {}), sx, ...avatarProps }) => {
    const styles = useMultiStyleConfig('AvatarMenu', avatarProps);
    const mergedAvatarStyles = useMemo(() => merge({}, styles.avatar, sx), [styles.avatar, sx]);
    return (_jsx(Menu, { autoSelect: false, defaultIsOpen: defaultIsOpen, children: ({ isOpen }) => (_jsxs(_Fragment, { children: [_jsx(AvatarMenuButton, { "data-group": true, isActive: isOpen, isOpen: isOpen, sx: styles.button, children: _jsx(Avatar, { name: name, sx: mergedAvatarStyles, ...avatarProps, children: hasNotification && badge }) }), _jsx(Menu.List, { role: "menu", sx: styles.list, ...menuListProps, children: children })] })) }));
};
